---

# Install all OS packages (including Jenkins itself).
- include_tasks: "packages_{{ ansible_os_family }}.yml"

- name: Create Jenkins Init Script Directory
  # Reference: https://wiki.jenkins-ci.org/display/JENKINS/Post-initialization+script
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755
  become: true

# Enable the Jenkins CLI.
- import_tasks: "cli_config.yml"

# Install and/or update plugins.
- import_tasks: "plugins.yml"

- name: Configure Jenkins (Miscellaneous Settings)
  shell:
    cmd: |
      cat <<EOF |
      // These are the basic imports that the Jenkins interactive script console
      // automatically includes.
      import jenkins.*;
      import jenkins.model.*;
      import hudson.*;
      import hudson.model.*;

      // Enable the slave agent port, because most everyone will want it.
      // This will use a setter, which will set the value (to a random port)
      // and also initialize the slave agent.
      if (Jenkins.instance.slaveAgentPort != 0) {
        Jenkins.instance.slaveAgentPort=0
        println "Changed slave agent configuration."
      }

      // Set the Jenkins external URL, if defined.
      // (Hat tip: http://stackoverflow.com/questions/30355079/jenkins-setting-root-url-via-groovy-api.)
      def externalUrl = "{{ jenkins_url_external | default('') | trim }}" ?: null
      def locationConfig = JenkinsLocationConfiguration.get()
      println("Configuring Jenkins External URL (current URL: '\${locationConfig.url}')...")
      if (externalUrl != locationConfig.url) {
        locationConfig.url = externalUrl
        locationConfig.save()
        println "Changed external URL"
      }
      EOF
      {{ jenkins_cli_command }} groovy =
  become: true
  become_user: jenkins
  register: shell_jenkins_config_misc
  changed_when: "(shell_jenkins_config_misc | success) and 'Changed' in shell_jenkins_config_misc.stdout"

- name: Configure Security Recommendations
  shell:
    cmd: |
      cat <<EOF |
      // These are the basic imports that Jenkins interactive script console
      // automatically includes.
      import jenkins.*;
      import jenkins.model.*;
      import hudson.*;
      import hudson.model.*;

      // Disable CLI remoting, as its insecure and Jenkins yells about it.
      // Reference: <://support.cloudbees.com/hc/en-us/articles/234709648-Disable-Jenkins-CLI>
      if (Jenkins.instance.getDescriptor("jenkins.CLI").get().isEnabled()) {
        Jenkins.instance.getDescriptor("jenkins.CLI").get().setEnabled(false)
        Jenkins.instance.save()
        println "Changed CLI remoting: now disabled."
      }

      // Disable deprecated agent protocols.
      // Reference: <https://github.com/jenkinsci/jenkins/commit/efdd52e9e78cc057ea49a7d338ee575d131c1959>
      def agentProtocolWasDisabled = false
      def agentProtocolNames = new HashSet(Jenkins.instance.getAgentProtocols())
      jenkins.AgentProtocol.all().each { agentProtocol ->
          println "Checking: " + agentProtocol.name
          if (agentProtocol.isDeprecated() && agentProtocolNames.contains(agentProtocol.name)) {
              agentProtocolNames.remove(agentProtocol.name)
              agentProtocolWasDisabled = true
              println "Changed protocols: removed protocol: " + agentProtocol.name
          }
      }
      if (agentProtocolWasDisabled) {
        Jenkins.instance.setAgentProtocols(agentProtocolNames)
        Jenkins.instance.save()
      }

      // Enable agent-master access control, as its strongly recommended.
      // References:
      // * <https://jenkins.io/redirect/security-144/>
      // * <https://stackoverflow.com/a/41588568/1851299>
      if (Jenkins.instance.injector.getInstance(jenkins.security.s2m.AdminWhitelistRule.class).getMasterKillSwitch()) {
        Jenkins.instance.injector.getInstance(jenkins.security.s2m.AdminWhitelistRule.class).setMasterKillSwitch(false);
        Jenkins.instance.save()
        println "Changed agent-master access control: now disabled."
      }

      // Enable CSRF, as its strongly recommended.
      // Reference: <https://wiki.jenkins.io/display/JENKINS/CSRF+Protection>
      if (Jenkins.instance.getCrumbIssuer() == null ) {
        Jenkins.instance.setCrumbIssuer(new hudson.security.csrf.DefaultCrumbIssuer(true))
        Jenkins.instance.save()
        println "Changed CSRF: enabled."
      }
      EOF
      {{ jenkins_cli_command }} groovy =
  become: true
  become_user: jenkins
  register: shell_jenkins_security_recommendations
  changed_when: "(shell_jenkins_security_recommendations | success) and 'Changed' in shell_jenkins_security_recommendations.stdout"

# Fire any pending restart handlers now, or else the tests below here may not
# be valid.
- meta: flush_handlers

- name: Ensure Service 'jenkins' Is Running
  service:
    name: jenkins
    state: started
    enabled: yes
  become: true

- name: Grab Jenkins Web UI Content
  # By default, Jenkins 2 is set to require auth, so the only page we can grab 
  # without getting a 403 and redirect is the login page.
  uri:
    url: "http://localhost:{{ jenkins_port }}{{ jenkins_context_path | default('') }}/login"
    return_content: true
  environment:
    no_proxy: localhost
  register: jenkins_ui

- name: Verify Jenkins Web UI Content
  action: fail
  when: jenkins_ui.content.find('Jenkins ver. 2') == -1
