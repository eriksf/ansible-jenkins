---
# Installs the "standard" Jenkins 2.0 plugins, as well as any additional that 
# are specified in the 'plugins_extra' variable.

# The (rather brilliant and arcane) "Should This Plugin Be Installed?" and 
# "Should This Plugin Be Updated?" logic is taken from here:
# https://github.com/ICTO/ansible-jenkins/blob/development/tasks/plugins.yml

- name: Refresh Update Center
  shell:
    cmd: |
      cat <<EOF |
      // These are the basic imports that Jenkin's interactive script console 
      // automatically includes.
      import jenkins.*;
      import jenkins.model.*;
      import hudson.*;
      import hudson.model.*;

      // Out of the box, Jenkins has no Update Center metadata, and so the CLI's
      // 'install-plugins' command will fail. This script pulls that data.
      def updateCenter = Jenkins.instance.updateCenter
      def result = updateCenter.updateAllSites()
      EOF
      {{ jenkins_cli_command }} groovy =
  become: true
  become_user: jenkins
  # This isn't a material change (by itself), so we don't count it, even though
  # it runs every time.
  changed_when: false

- name: List Plugins for Install
  shell: "{{ jenkins_cli_command }} list-plugins | cut -f 1 -d ' '"
  become: true
  become_user: jenkins
  register: plugins_installed
  changed_when: false

# FIXME: All of the plugins can be joined into a space-separated list and run in a single command.
- name: Install Plugins
  shell: "{{ jenkins_cli_command }} install-plugin {{ item }}"
  when: item not in plugins_installed.stdout
  with_items:
    - "{{ jenkins_plugins_recommended }}"
    - "{{ jenkins_plugins_extra }}"
  become: true
  become_user: jenkins
  notify:
    - "Restart Service 'jenkins'"

- name: List Plugins for Update
  shell: "{{ jenkins_cli_command }} list-plugins | grep ')$' | cut -f 1 -d ' ' | awk 1 ORS=' '"
  become: true
  become_user: jenkins
  register: plugins_updates
  changed_when: false

- name: Update Plugins
  shell: "{{ jenkins_cli_command }} install-plugin {{ item }}"
  with_items: "{{ plugins_updates.stdout.split() }}"
  when: plugins_updates.stdout != ''
  become: true
  become_user: jenkins
  notify:
    - "Restart Service 'jenkins'"
